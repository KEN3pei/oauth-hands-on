/*
 * This file is generated by jOOQ.
 */
package com.example.authorization_server.jooq.tables.records;


import com.example.authorization_server.jooq.tables.Token;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TokenRecord extends UpdatableRecordImpl<TokenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oauth_db.token.access_token</code>.
     */
    public void setAccessToken(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>oauth_db.token.access_token</code>.
     */
    public String getAccessToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>oauth_db.token.client_id</code>.
     */
    public void setClientId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oauth_db.token.client_id</code>.
     */
    public String getClientId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oauth_db.token.query</code>.
     */
    public void setQuery(JSON value) {
        set(2, value);
    }

    /**
     * Getter for <code>oauth_db.token.query</code>.
     */
    public JSON getQuery() {
        return (JSON) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TokenRecord
     */
    public TokenRecord() {
        super(Token.TOKEN);
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(String accessToken, String clientId, JSON query) {
        super(Token.TOKEN);

        setAccessToken(accessToken);
        setClientId(clientId);
        setQuery(query);
        resetChangedOnNotNull();
    }
}
