/*
 * This file is generated by jOOQ.
 */
package com.example.authorization_server.jooq.tables.records;


import com.example.authorization_server.jooq.tables.Requests;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RequestsRecord extends UpdatableRecordImpl<RequestsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oauth_db.requests.req_id</code>.
     */
    public void setReqId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>oauth_db.requests.req_id</code>.
     */
    public String getReqId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>oauth_db.requests.query</code>.
     */
    public void setQuery(JSON value) {
        set(1, value);
    }

    /**
     * Getter for <code>oauth_db.requests.query</code>.
     */
    public JSON getQuery() {
        return (JSON) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RequestsRecord
     */
    public RequestsRecord() {
        super(Requests.REQUESTS);
    }

    /**
     * Create a detached, initialised RequestsRecord
     */
    public RequestsRecord(String reqId, JSON query) {
        super(Requests.REQUESTS);

        setReqId(reqId);
        setQuery(query);
        resetChangedOnNotNull();
    }
}
